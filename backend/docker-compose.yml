version: "2.15.1"

services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: 'no'
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - titan
    # environment:
      # OTHER_SERVERS: 2
      # MONGO_URI: mongodb://root:example@database1:27017/
  docker-daemon-1:
    build: ./../docker-daemon
    restart: 'no'
    depends_on:
      - rabbitmq
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    networks:
      - titan
    environment:
      RABBITMQ_HOST: rabbitmq
      NETWORK_NAME: titan
      INSTANCE_ID: 1
      LEADER: 1
  
  docker-daemon-2:
    build: ./../docker-daemon
    restart: 'no'
    depends_on:
      - rabbitmq
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    networks:
      - titan
    environment:
      RABBITMQ_HOST: rabbitmq
      NETWORK_NAME: titan
      INSTANCE_ID: 2
      LEADER: 1

  srv1:
    build: ./
    restart: 'no'
    depends_on:
      - rabbitmq
    ports:
      - 8080:8080
    networks:
      - titan
    volumes:
      - data:/app/data
    environment:
      PORT: 8080
      INSTANCE_ID: 1
      LEADER: 1
      RABBITMQ_HOST: rabbitmq
      # OTHER_SERVERS: 2
      # MONGO_URI: mongodb://root:example@database1:27017/

  srv2:
    build: ./
    restart: 'no'
    depends_on:
      - rabbitmq
    ports:
      - 8081:8080
    networks:
      - titan
    volumes:
      - data:/app/data
    environment:
      PORT: 8080
      INSTANCE_ID: 2
      LEADER: 1
      RABBITMQ_HOST: rabbitmq
      # OTHER_SERVERS: 1
      # MONGO_URI: mongodb://root:example@database2:27017/
  srv3:
    build: ./
    restart: 'no'
    depends_on:
      - rabbitmq
    ports:
      - 8082:8080
    networks:
      - titan
    volumes:
    - data:/app/data
    environment:
      PORT: 8080
      INSTANCE_ID: 3
      LEADER: 1
      RABBITMQ_HOST: rabbitmq
      # OTHER_SERVERS: 1
      # MONGO_URI: mongodb://root:example@database2:27017/
networks:
  titan:
      name: titan
      driver: bridge
volumes:
  data:
    driver: local
    driver_opts:
      type: none
      device: /data
      o: bind



# DB STUFF:
# db1:
  #   image: mongo
  #   restart: 'no'
  #   volumes:
  #     - data:/data/questions
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: adminpass

  # db2:
  #   image: mongo
  #   restart: 'no'
  #   volumes:
  #     -  data:/data/questions
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: adminpass
  # db-express1:
  #   image: mongo-express
  #   restart: 'no'
  #   ports:
  #     - 8083:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: admin
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: adminpass
  #     ME_CONFIG_MONGODB_URL: mongodb://admin:adminpass@db1:27017/

  # db-express2:
  #   image: mongo-express
  #   restart: 'no'
  #   ports:
  #     - 8084:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: admin
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: adminpass
  #     ME_CONFIG_MONGODB_URL: mongodb://admin:adminpass@db2:27017/